<Page x:Class="Uno.Gallery.Views.Samples.DataGridSamplePage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:wct="using:Microsoft.Toolkit.Uwp.UI.Controls"
	  xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
	  xmlns:smtx="using:ShowMeTheXAML"
	  xmlns:local="using:Uno.Gallery"
	  mc:Ignorable="d">

	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
		<local:SamplePageLayout>

			<local:SamplePageLayout.DesignAgnosticTemplate>
				<DataTemplate>
					<StackPanel>

						<smtx:XamlDisplay UniqueKey="DataGridSamplePage_Agnostic_Default"
										  smtx:XamlDisplayExtensions.Header="Default"
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\UserControl\Grid">

							<UserControl>

								<Grid HorizontalAlignment="Stretch"
									  ColumnSpacing="8"
									  RowSpacing="8">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>

									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="auto" />
									</Grid.ColumnDefinitions>

									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup>
											<VisualState x:Name="WideState">
												<VisualState.StateTriggers>
													<AdaptiveTrigger MinWindowWidth="1060" />
												</VisualState.StateTriggers>
												<VisualState.Setters>
													<Setter Target="dataGrid.(Grid.Column)"
															Value="0" />
													<Setter Target="sideBar.(Grid.Column)"
															Value="1" />
													<Setter Target="sideBar.(Grid.Row"
															Value="0" />
													<Setter Target="dataGrid.(Grid.Row)"
															Value="0" />
													<Setter Target="sideBar.HorizontalAlignment"
															Value="Right" />
												</VisualState.Setters>
											</VisualState>
											<VisualState x:Name="NarrowState">
												<VisualState.StateTriggers>
													<AdaptiveTrigger MinWindowWidth="0" />
												</VisualState.StateTriggers>
												<VisualState.Setters>
													<Setter Target="dataGrid.(Grid.Row)"
															Value="0" />
													<Setter Target="sideBar.(Grid.Row)"
															Value="1" />
													<Setter Target="sideBar.(Grid.ColumnSpan)"
															Value="2" />
													<Setter Target="dataGrid.(Grid.ColumnSpan)"
															Value="2" />
													<Setter Target="sideBar.HorizontalAlignment"
															Value="Stretch" />
												</VisualState.Setters>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>

									<wct:DataGrid ItemsSource="{Binding Data.DataGridItems, Mode=TwoWay}"
												  ColumnHeaderHeight="{Binding Data.ColumnHeaderHeight, Mode=OneWay}"
												  MaxColumnWidth="{Binding Data.MaxColumnWidth, Mode=OneWay}"
												  MinColumnWidth="{Binding Data.MinColumnWidth, Mode=OneWay}"
												  AreRowDetailsFrozen="{Binding Data.AreRowDetailsFrozen, Mode=OneWay}"
												  AreRowGroupHeadersFrozen="{Binding Data.AreRowGroupHeadersFrozen, Mode=OneWay}"
												  CanUserSortColumns="{Binding Data.CanUserSortColumns, Mode=OneWay}"
												  CanUserReorderColumns="{Binding Data.CanUserReorderColumns, Mode=OneWay}"
												  CanUserResizeColumns="{Binding Data.CanUserResizeColumns, Mode=OneWay}"
												  IsReadOnly="{Binding Data.IsReadOnly, Mode=OneWay}"
												  AlternatingRowForeground="{Binding Data.AlternatingRowForeground, Mode=OneWay}"
												  AlternatingRowBackground="{Binding Data.AlternatingRowBackground, Mode=OneWay}"
												  GridLinesVisibility="{Binding Data.GridLinesVisibility, Mode=OneWay}"
												  HeadersVisibility="{Binding Data.HeadersVisibility, Mode=OneWay}"
												  SelectionMode="{Binding Data.SelectionMode, Mode=OneWay}"
												  RowGroupHeaderPropertyNameAlternative="{Binding Data.RowGroupHeader, Mode=OneWay}"
												  RowDetailsVisibilityMode="Collapsed"
												  AutoGenerateColumns="False"
												  Sorting="DataGrid_Sorting">
										<wct:DataGrid.Columns>
											<wct:DataGridTextColumn Header="Plant Name"
																	Tag="PlantName"
																	Binding="{Binding PlantName, Mode=TwoWay}" />

											<wct:DataGridTextColumn Header="Plants Count"
																	Tag="PlantsCount"
																	Binding="{Binding PlantsCount, Mode=TwoWay}" />

											<wct:DataGridTemplateColumn Header="Fruit or Vegetable"
																		Tag="FruitOrVegetable">
												<wct:DataGridTemplateColumn.CellTemplate>
													<DataTemplate>
														<TextBlock Text="{Binding FruitOrVegetable}"
																   VerticalAlignment="Center"
																   Margin="8,0,0,0" />
													</DataTemplate>
												</wct:DataGridTemplateColumn.CellTemplate>
												<wct:DataGridTemplateColumn.CellEditingTemplate>
													<DataTemplate>
														<ComboBox ItemsSource="{Binding FruitOrVegetableEnumValues}"
																  SelectedItem="{Binding FruitOrVegetable, Mode=TwoWay}"
																  HorizontalAlignment="Stretch" />
													</DataTemplate>
												</wct:DataGridTemplateColumn.CellEditingTemplate>
											</wct:DataGridTemplateColumn>

											<wct:DataGridTemplateColumn Header="Date Planted"
																		Tag="PlantDate">
												<wct:DataGridTemplateColumn.CellTemplate>
													<DataTemplate>
														<TextBlock Text="{Binding PlantDate, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:MM/dd/yyyy}'}"
																   VerticalAlignment="Center"
																   Margin="8,0,0,0" />
													</DataTemplate>
												</wct:DataGridTemplateColumn.CellTemplate>
												<wct:DataGridTemplateColumn.CellEditingTemplate>
													<DataTemplate>
														<CalendarDatePicker Margin="3,4,3,3"
																			Date="{Binding PlantDate, Mode=TwoWay,Converter={StaticResource DateTimeToDateTimeOffset}}" />
													</DataTemplate>
												</wct:DataGridTemplateColumn.CellEditingTemplate>
											</wct:DataGridTemplateColumn>

											<wct:DataGridCheckBoxColumn Header="Has been watered?"
																		Tag="IsWatered"
																		Binding="{Binding IsWatered, Mode=TwoWay}" />
										</wct:DataGrid.Columns>

										<wct:DataGrid.RowDetailsTemplate>
											<DataTemplate>
												<StackPanel Spacing="8"
															Margin="20,10">
													<TextBlock Text="{Binding PlantName}" />
													<TextBlock Text="{Binding PlantsCount}" />
													<TextBlock Text="{Binding FruitOrVegetable}" />
													<TextBlock Text="{Binding PlantDate}" />
													<TextBlock Text="{Binding IsWatered}" />
												</StackPanel>
											</DataTemplate>
										</wct:DataGrid.RowDetailsTemplate>
									</wct:DataGrid>

									<Border x:Name="sideBar"
											HorizontalAlignment="Right"
											VerticalAlignment="Top"
											CornerRadius="8"
											Padding="16"
											MinWidth="280"
											Background="{ThemeResource CardBackgroundFillColorDefaultBrush}">

										<ScrollViewer>
											<StackPanel Spacing="4">
												<StackPanel Orientation="Horizontal">
													<AppBarButton Icon="Filter"
																  Label="Filter By">
														<AppBarButton.Flyout>
															<MenuFlyout>
																<MenuFlyoutItem Text="Count &gt; 10"
																				Tag="TenMore"
																				Click="FilterFlyoutItem_Click" />
																<MenuFlyoutItem Text="Count &lt; 10"
																				Tag="TenLess"
																				Click="FilterFlyoutItem_Click" />
																<MenuFlyoutSeparator />
																<MenuFlyoutItem Text="Watered"
																				Tag="IsWatered"
																				Click="FilterFlyoutItem_Click" />
																<MenuFlyoutSeparator />
																<MenuFlyoutItem Text="Fruit"
																				Tag="Fruit"
																				Click="FilterFlyoutItem_Click" />
																<MenuFlyoutItem Text="Vegetable"
																				Tag="Vegetable"
																				Click="FilterFlyoutItem_Click" />
																<MenuFlyoutSeparator />
																<MenuFlyoutItem Text="Remove Filter"
																				Click="FilterFlyoutItem_Click" />
															</MenuFlyout>
														</AppBarButton.Flyout>
													</AppBarButton>
													<AppBarButton Label="Group By">
														<AppBarButton.Icon>
															<FontIcon Glyph="&#xEA37;" />
														</AppBarButton.Icon>
														<AppBarButton.Flyout>
															<MenuFlyout>
																<MenuFlyoutItem Text="Fruit or Vegetable"
																				Tag="FruitOrVegetable"
																				Click="GroupByFlyoutItem_Click" />
																<MenuFlyoutItem Text="Has been watered?"
																				Tag="IsWatered"
																				Click="GroupByFlyoutItem_Click" />
																<MenuFlyoutSeparator />
																<MenuFlyoutItem Text="Remove Filter"
																				Click="GroupByFlyoutItem_Click" />
															</MenuFlyout>
														</AppBarButton.Flyout>
													</AppBarButton>
												</StackPanel>
												<MenuFlyoutSeparator Margin="0,-4,0,4" />
												<muxc:NumberBox Value="{Binding Data.ColumnHeaderHeight, Mode=TwoWay}"
																Minimum="4"
																Maximum="999"
																Header="ColumnHeaderHeight" />
												<muxc:NumberBox Value="{Binding Data.MaxColumnWidth, Mode=TwoWay}"
																Minimum="{Binding Data.MinColumnWidth, Mode=TwoWay}"
																Maximum="999"
																Header="MaxColumnWidth" />
												<muxc:NumberBox Value="{Binding Data.MinColumnWidth, Mode=TwoWay}"
																Maximum="{Binding Data.MaxColumnWidth, Mode=TwoWay}"
																Minimum="0"
																Header="MinColumnWidth" />
												<CheckBox IsChecked="{Binding Data.AreRowDetailsFrozen, Mode=TwoWay}"
														  Content="AreRowDetailsFrozen" />
												<CheckBox IsChecked="{Binding Data.AreRowGroupHeadersFrozen, Mode=TwoWay}"
														  Content="AreRowGroupHeadersFrozen" />
												<CheckBox IsChecked="{Binding Data.CanUserSortColumns, Mode=TwoWay}"
														  Content="CanUserSortColumns" />
												<CheckBox IsChecked="{Binding Data.CanUserReorderColumns, Mode=TwoWay}"
														  Content="CanUserReorderColumns" />
												<CheckBox IsChecked="{Binding Data.CanUserResizeColumns, Mode=TwoWay}"
														  Content="CanUserResizeColumns" />
												<CheckBox IsChecked="{Binding Data.IsReadOnly, Mode=TwoWay}"
														  Content="IsReadOnly" />
												<ComboBox ItemsSource="{Binding Data.AvailableColors, Mode=OneTime}"
														  SelectedItem="{Binding Data.AlternatingRowForeground, Mode=TwoWay}"
														  Header="AlternatingRowForeground">
													<ComboBox.ItemTemplate>
														<DataTemplate>
															<StackPanel Orientation="Horizontal">
																<Border BorderBrush="Gray"
																		BorderThickness="0.5"
																		CornerRadius="3">
																	<Rectangle Width="20"
																			   Height="20"
																			   RadiusX="3"
																			   RadiusY="3"
																			   VerticalAlignment="Center"
																			   Fill="{Binding}" />
																</Border>
																<TextBlock Text="{Binding Color, Converter={StaticResource ColorNameToString}}"
																		   VerticalAlignment="Center"
																		   Margin="10,0,0,0" />
															</StackPanel>
														</DataTemplate>
													</ComboBox.ItemTemplate>
												</ComboBox>
												<ComboBox ItemsSource="{Binding Data.AvailableColors, Mode=OneTime}"
														  SelectedItem="{Binding Data.AlternatingRowBackground, Mode=TwoWay}"
														  Header="AlternatingRowBackground">
													<ComboBox.ItemTemplate>
														<DataTemplate>
															<StackPanel Orientation="Horizontal">
																<Border BorderBrush="Gray"
																		BorderThickness="0.5"
																		CornerRadius="3">
																	<Rectangle Width="20"
																			   Height="20"
																			   RadiusX="3"
																			   RadiusY="3"
																			   VerticalAlignment="Center"
																			   Fill="{Binding}" />
																</Border>
																<TextBlock Text="{Binding Color, Converter={StaticResource ColorNameToString}}"
																		   VerticalAlignment="Center"
																		   Margin="10,0,0,0" />
															</StackPanel>
														</DataTemplate>
													</ComboBox.ItemTemplate>
												</ComboBox>
												<ComboBox ItemsSource="{Binding Data.GridLinesVisibilityOptions}"
														  SelectedItem="{Binding Data.GridLinesVisibility, Mode=TwoWay}"
														  Header="GridLinesVisibility" />
												<ComboBox ItemsSource="{Binding Data.HeadersVisibilityOptions}"
														  SelectedItem="{Binding Data.HeadersVisibility, Mode=TwoWay}"
														  Header="HeadersVisibility" />
												<ComboBox ItemsSource="{Binding Data.SelectionModeOptions}"
														  SelectedItem="{Binding Data.SelectionMode, Mode=TwoWay}"
														  Header="SelectionMode" />
											</StackPanel>
										</ScrollViewer>
									</Border>
								</Grid>
							</UserControl>
						</smtx:XamlDisplay>
					</StackPanel>
				</DataTemplate>
			</local:SamplePageLayout.DesignAgnosticTemplate>
		</local:SamplePageLayout>
	</Grid>
</Page>
